# 그래프 탐색 알고리즘 : DFS/BFS
# 탐색(search)이란 많은 양의 데이터 중에서 원하는 데이터를 찾는 과정.

# 재귀 함수(Recursive Function)란 자기 자신을 다시 호출하는 함수
#  - DFS를 실질적으로 구현할 때 자주 사용 됨.  

# 최대공약수 계산(유클리드 호제법) 예제
# 두개의 자연수에 대한 최대공약수를 구하는 대표적인 알고리즘으로는 유클리드 호제법이 있다.

# 유클리드 호제법
    # 두 자연수 A, B에 대하여 (A > B) A를 B로 나눈 나머지를 R
    # 이 때 A와 B의 최대공약수는 B와 R의 최대공약수와 같다
# 유클리드 호제법의 아이디어를 그대로 재귀 함수로 작성

def gcd(a, b):
    if a % b == 0: #즉, a가 b의 배수라면
        return b
    else:
        return gcd(b, a % b)

print(gcd(192, 162))

# 모든 재귀 함수는 반복문을 이용하여 동일한 기능을 구현할 수 있다.
# 컴퓨터가 함수를 연속적으로 호출하면 컴퓨터 메모리 내부의 스택 프레임에 쌓인다. 그래서 스택을 사용해야 할 때 구현상 스택 라이브러리 대신에 재귀함수를 이용하는 경우가 많다.